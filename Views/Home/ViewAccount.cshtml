@using System.Security.Claims
@using TheLifeTimeTalents.Services
@{var identity = Context.User.Identity as ClaimsIdentity;}
<div class="form-group">
    <label for="uname">Username:</label>
    <input type="text" class="form-control" placeholder="Username" id="uname">
</div>
<div class="form-group">
    <label for="email">Email address:</label>
    <input type="email" class="form-control" placeholder="Email" id="email">
</div>
<div class="form-group">
    <label for="status">Status:</label>
    <input type="text" class="form-control" placeholder="Status" id="status" disabled>
    <div class="input-group-append">
        @if (identity.FindFirst("RoleName").ToString().Contains("Registered Free Plan User"))
        {
            <button id="btnUpgrade" class="btn btn-success">Upgrade</button>
        }
    </div>
</div>

<button type="submit" class="btn btn-primary">Edit</button>

<div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="border:unset;">
            <div class="modal-header" id="modalHeader">
                <h4 class="modal-title" id="addModalLabel">Add Customer</h4>
            </div>
            <div class="modal-body" id="modalBody">
                <p>Upgrade to be able comment on peoples post.</p>
                <form asp-controller="Payment" asp-action="Subscribe" method="post" id="payment-form" style="width:100%;">
                    <div class="container">
                        <div class="form-row">
                            <label for="card-element">
                                Credit or debit card
                            </label>
                            <div id="card-element" style="width:100%;">
                                <!-- A Stripe Element will be inserted here. -->
                            </div>

                            <!-- Used to display form errors. -->
                            <div id="card-errors" role="alert"></div>
                        </div>
                        <div class="form-row">
                            <label for="email">
                                Email
                            </label>
                            <div style="width:100%;">
                                <input name="cardEmail" id="cardEmail" />
                            </div>
                        </div>
                        <button>Make Subscription</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        var s = "@identity.FindFirst("ID")";
        var userId = s.replace(/^\D+/g, '');

        loadData();

        function loadData() {
            $.ajax({
                method: 'GET',
                url: `/API/User/${userId}`,
                dataType: 'json',
            }).done(function (data) {
                console.log(data);
                $('#uname').val(data.response.username);
                $('#email').val(data.response.email);
                $('#cardEmail').val(data.response.email);
                $('#status').val(data.response.role.roleName);
            })
        }

        // Create a Stripe client and use the Viewbag to get your Stripe API key.
    var stripe = Stripe('@ViewBag.stripeKey');

    // Create an instance of Elements.
    var elements = stripe.elements();

    // Custom styling can be passed to options when creating an Element.
    // (Note that this demo uses a wider set of styles than the guide below.)
    var style = {
    base: {
        color: '#32325d',
        fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
        fontSmoothing: 'antialiased',
        fontSize: '16px',
        '::placeholder': {
        color: '#aab7c4'
        }
    },
    invalid: {
        color: '#fa755a',
        iconColor: '#fa755a'
    }
    };

    // Create an instance of the card Element.
    var card = elements.create('card', {style: style});

    // Add an instance of the card Element into the `card-element` <div>.
    card.mount('#card-element');

    // Handle real-time validation errors from the card Element.
    card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
        displayError.textContent = event.error.message;
    } else {
        displayError.textContent = '';
    }
    });

    // Handle form submission.
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function(event) {
    event.preventDefault();

    stripe.createToken(card).then(function(result) {
        if (result.error) {
        // Inform the user if there was an error.
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
        } else {
        // Send the token to your server.
        stripeTokenHandler(result.token);
        }
    });
    });

    // Submit the form with the token ID.
    function stripeTokenHandler(token) {
        // Insert the token ID into the form so it gets submitted to the server
        var form = document.getElementById('payment-form');
        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'stripeToken');
        hiddenInput.setAttribute('value', token.id);
        form.appendChild(hiddenInput);

        // Submit the form
        form.submit();
    }
    </script>
}