@{
    ViewData["Title"] = "Home Page";
}
@using System.Security.Claims
@using TheLifeTimeTalents.Services
@{var identity = Context.User.Identity as ClaimsIdentity;}
<div class="container" id="addarea">
    <div class="row col-md-10 col-md-offset-1">
        @*<button type="button" class="btn btn-success" data-toggle="modal" data-target="#addModal"><span class="glyphicon glyphicon-plus"></span> Add</button>*@
    </div>
</div>

<!-- adding new new talent -->
<div id="addModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">

                <form class="form-horizontal" enctype="multipart/form-data">
                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="addName">Name</label>
                        <div class="col-md-4">
                            <input style="width: 350%" maxlength="1000" id="addName" name="addName" type="text" placeholder="Barot Bellingham" class="form-control input-md" required="">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="addShortName">Short Name</label>
                        <div class="col-md-4">
                            <input style="width: 350%" maxlength="1000" id="addShortName" name="addShortName" type="text" placeholder="Barot_Bellingham" class="form-control input-md" required="">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="addReknown">Reknown</label>
                        <div class="col-md-4">
                            <input style="width: 350%" maxlength="1000" id="addReknown" name="addReknown" type="text" placeholder="Best F1 Driver" class="form-control input-md" required="">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="addImage">Link to Image</label>
                        <div class="col-md-4">
                            <input style="width: 350%" maxlength="1000" id="addImage" name="addImage" type="text" placeholder="https://csctalents2.s3.amazonaws.com/Barot_Bellingham_tn.jpg" class="form-control input-md" required="">
                            @*<input type="file" name="file" id="file" value="dataFile" required="">
                                <button onclick="uploadFile()">Upload to S3</button>*@
                        </div>
                    </div>

                    <!-- Textarea -->
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="addBio">Bio</label>
                        <div class="col-md-4">
                            <textarea style="width: 350%" maxlength="10000" rows="12" placeholder="Description" class="form-control" id="addBio" name="addBio"></textarea>
                        </div>
                    </div>

                </form>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                <button id="btnAdd" name="btnAdd" type="button" class="btn btn-success">Add</button>
            </div>
        </div>

    </div>
</div>

<!-- editing talents-->
<div id="editModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Update</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">

                <form class="form-horizontal">

                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="editName">Name</label>
                        <div class="col-md-4">
                            <input style="width: 350%" maxlength="1000" id="editName" name="editName" type="text" placeholder="" class="form-control input-md" required="">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="editShortName">Short Name</label>
                        <div class="col-md-4">
                            <input style="width: 350%" maxlength="1000" id="editShortName" name="editShortName" type="text" placeholder="" class="form-control input-md" required="">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="editReknown">Reknown</label>
                        <div class="col-md-4">
                            <input style="width: 350%" maxlength="1000" id="editReknown" name="editReknown" type="text" placeholder="" class="form-control input-md" required="">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="editImage">Link to Image</label>
                        <div class="col-md-4">
                            <input style="width: 350%" maxlength="1000" id="editImage" name="editImage" type="text" placeholder="http://placehold.it/160x160" class="form-control input-md" required="">
                            @*<input type="file" name="file" id="file" value="dataFile" required="">
                                <button onclick="uploadFile()">Upload to S3</button>*@
                        </div>
                    </div>

                    <!-- Textarea -->
                    <div class="form-group">
                        <label class="col-md-4 control-label" for="editBio">Bio</label>
                        <div class="col-md-4">
                            <textarea style="width: 350%" maxlength="10000" rows="12" placeholder="Description" class="form-control" id="editBio" name="editBio"></textarea>
                        </div>
                    </div>

                </form>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                <button id="btnSave" name="btnSave" type="button" class="btn btn-success">Save</button>
            </div>
        </div>

    </div>
</div>

<!--deleting talents-->
<div id="deleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Delete</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body text-center">
                <h2>Are you sure you want to delete this?</h2>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button id="btnDelete" name="btnDelete" type="button" class="btn btn-danger">Delete</button>
            </div>
        </div>

    </div>
</div>

@*<div class="container" id="results"></div>*@

@*<div id="searcharea">
        <label for="search">live search</label>
        <p>Enter the name or info about a speaker</p>
        <input type="search" name="search" id="search" placeholder="name or info" />
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#addModal"><span class="glyphicon glyphicon-plus"></span> Add</button>
        <input type="file" name="file" id="file" value="dataFile" required="">
        <button onclick="uploadFile()">Upload to S3</button>
        <div class="upload-photo">
            <input type="file" name="file" id="file" value="dataFile" onchange="uploadImage()">
            <div class="photo-container">
                <img class="photo" src="" alt="Image preview">
            </div>
        </div>
        <div class="analysis" id="analysis">
        </div>
    </div>*@

<form class="form-horizontal1" enctype="multipart/form-data">
    <!-- Text input-->
    <div class="form-group">
        <label class="col-md-4 control-label" for="displayName">Name</label>
        <div class="col-md-4">
            <input style="width: 350%" maxlength="1000" id="displayName" name="displayName" type="text" placeholder="Barot Bellingham" class="form-control input-md" required="">

        </div>
    </div>

    <!-- Text input-->
    <div class="form-group">
        <label class="col-md-4 control-label" for="displayShortName">Short Name</label>
        <div class="col-md-4">
            <input style="width: 350%" maxlength="1000" id="displayShortName" name="displayShortName" type="text" placeholder="Barot_Bellingham" class="form-control input-md" required="">

        </div>
    </div>

    <!-- Text input-->
    <div class="form-group">
        <label class="col-md-4 control-label" for="displayReknown">Reknown</label>
        <div class="col-md-4">
            <input style="width: 350%" maxlength="1000" id="displayReknown" name="displayReknown" type="text" placeholder="Best F1 Driver" class="form-control input-md" required="">

        </div>
    </div>

    <!-- Text input-->
    <div class="form-group">
        <label class="col-md-4 control-label" for="displayImage">Link to Image</label>
        <div class="col-md-4">
            <input style="width: 350%" maxlength="1000" id="displayImage" name="displayImage" type="text" placeholder="http://placehold.it/160x160" class="form-control input-md" required="">
            @*<input type="file" name="file" id="file" value="dataFile" required="">
                <button onclick="uploadFile()">Upload to S3</button>*@
        </div>
    </div>

    <!-- Textarea -->
    <div class="form-group">
        <label class="col-md-4 control-label" for="displayBio">Bio</label>
        <div class="col-md-4">
            <textarea style="width: 350%" maxlength="10000" rows="12" placeholder="Description" class="form-control" id="displayBio" name="displayBio"></textarea>
        </div>
    </div>

    <button class="btn btn-warning pull-right" id="editModal1" name="editModal1' + val.id + '" data-toggle="modal" data-target="#editModal" value="' + val.id + '"><i class="fas fa-edit"></i></button>
    <button id="btnDelete1" name="btnDelete1' + val.id + '" class="btn btn-danger pull-right" data-toggle="modal" data-target="#deleteModal" value="' + val.id + '"><i class="fas fa-trash"></i></button>
</form>
<div id="update"></div>

@section Scripts{
    <script>
 var s = "@identity.FindFirst("ID")";
        var userId = s.replace(/^\D+/g, '');

        loadEdit(userId);

    function loadEdit(inId) {
        $.ajax({
            method: 'GET',
            url: `/API/talents/${inId}`,
            dataType: 'json',
        }).done(function (data) {
            console.log(data);
           $('#displayName').val(data.name);
          $('#displayShortName').val(data.shortName);
           $('#displayReknown').val(data.reknown);
           $('#displayImage').val(data.image);
          $('#displayBio').val(data.bio);

        })
    }



    $(function () {
        $('#update').on('click', '#btnDelete1', function () {
            id = $(this).val();

        });
    })

    //to update
    $('#btnSave').click(function () {
        alert("updating...");

        if ($("#displayName").val().trim().length == 0 || $("#displayShortName").val().trim().length == 0 || $("#displayReknown").val().trim().length == 0 || $("#displayImage").val().trim().length == 0 || $("#displayBio").val().trim().length == 0) {
            alert('Please Fill In The Information!');
        }

        else {



            let collectedName = $('#displayName').val();
            let collectedShortName = $('#displayShortName').val();
            let collectedReknown = $('#displayReknown').val();
            let collectedImageURL = $('#displayImage').val();
            let collectedBio = $('#displayBio').val();
            console.dir(collectedName, collectedShortName, collectedReknown, collectedImageURL, collectedBio);
            let webFormData = new WebFormData(collectedName, collectedShortName, collectedReknown, collectedImageURL, collectedBio);
            console.dir(webFormData);



            $.ajax({
                method: 'PUT',
                async: true,
                url: `/api/talents/${id}`,
                data: webFormData,
                datatype: 'application/json',
                contentType: 'application/x-www-form-urlencoded',

            }).done(function (data, textStatus, jqXHR) {
                new Noty({
                    text: data.message,
                    theme: 'metroui',
                    layout: 'center',
                    type: 'success'
                }).show();
                setTimeout(function () {
                    location.reload();
                }, 2000);
            }).fail(function (data, textStatus, jqXHR) {
                new Noty({
                    text: data.responseJSON.message,
                    theme: 'metroui',
                    layout: 'center',
                    timeout: 3000,
                    type: 'error'
                }).show();
            })

        }
    });

    $('#btnDelete1').click(function () {
        $.ajax({
            method: 'DELETE',
            url: `/API/talents/${id}`
        }).done(function (data, textStatus, jqXHR) {
            new Noty({
                text: data.message,
                theme: 'metroui',
                layout: 'center',
                type: 'success'
            }).show();
            setTimeout(function () {
                location.reload();
            }, 2000);
        }).fail(function (data, textStatus, jqXHR) {
            new Noty({
                text: data.responseJSON.message,
                theme: 'metroui',
                layout: 'center',
                timeout: 3000,
                type: 'error'
            }).show();
        })

    });


    </script>
    <style>

        body {
            background: #DAD7C7;
        }

        #searcharea {
            margin: 0 auto;
            text-align: center;
            background: #BF996B;
            padding: 10px;
            width: 30%;
            -webkit-border-radius: 10px 10px 0 0;
            -moz-border-radius: 10px 10px 0 0;
            border-radius: 10px 10px 0 0;
        }

            #searcharea label {
                font: bold 1.3em Arial;
                text-transform: uppercase;
                padding-bottom: 5px;
                color: #A61C1C;
            }

            #searcharea p {
                margin: 0;
                line-height: 1em;
                padding-bottom: 5px;
            }

            #searcharea input {
                width: 80%;
                text-align: center;
            }

        #update {
            font-family: Georgia, "Times New Roman", Times, serif;
            width: 70%;
            margin: 0 auto;
            border-top: 1px dotted #CCC;
        }

            #update ul {
                list-style: none;
                margin: 0;
                padding: 0;
            }

                #update ul li {
                    width: 100%;
                    padding: 0 20px;
                    background: #EEE;
                    padding-bottom: 10px;
                    height: 110px;
                    overflow: hidden;
                    border-bottom: 1px dotted #CCC;
                    -webkit-animation: myanim 1s;
                    -moz-animation: myanim 1s;
                    -o-animation: myanim 1s;
                    animation: myanim 1s;
                    -webkit-transition: height 0.3s ease-out;
                    -moz-transition: height 0.3s ease-out;
                    -o-transition: height 0.3s ease-out;
                    transition: height 0.3s ease-out;
                }

            #update li:hover {
                background: #FFFCE5;
                min-height: 110px;
                height: 250px;
                overflow: visible;
            }

            #update h2 {
                margin: 0;
                padding: 0;
                font-size: 1.2em;
                padding-bottom: 5px;
                padding-top: 20px;
                font-family: Arial, Helvetica, sans-serif;
                color: #BF5841;
                border-bottom: 1px dotted #CCC;
                margin-bottom: 10px;
            }

            #update img {
                float: left;
                width: 80px;
                margin-right: 10px;
                -webkit-border-radius: 10px;
                -moz-border-radius: 10px;
                border-radius: 10px;
            }

        @@-webkit-keyframes myanim {
            0% {
                opacity: 0.3;
            }

            100% {
                opacity: 1.0;
            }
        }

        @@-moz-keyframes myanim {
            0% {
                opacity: 0.3;
            }

            100% {
                opacity: 1.0;
            }
        }

        @@-o-keyframes myanim {
            0% {
                opacity: 0.3;
            }

            100% {
                opacity: 1.0;
            }
        }

        @@keyframes myanim {
            0% {
                opacity: 0.3;
            }

            100% {
                opacity: 1.0;
            }
        }

        #btnDelete {
            margin-left: 5px;
        }

        .photo {
            margin: auto;
            margin-top: 5px;
        }
    </style>

    <script type="text/javascript" src="https://sdk.clarifai.com/js/clarifai-latest.js"></script>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script>
        var clarifaiApiKey = '7949d65990db40779e313b1ad2ffec48';
        var workflowId = 'NSFW';

        var app = new Clarifai.App({
            apiKey: clarifaiApiKey
        });


        // Handles image upload
        function uploadImage() {
            var preview = document.querySelector('img');
            var file = document.querySelector('input[type=file]').files[0];
            var reader = new FileReader();

            reader.addEventListener("load", function () {
                preview.src = reader.result;
                var imageData = reader.result;
                imageData = imageData.replace(/^data:image\/(.*);base64,/, '');
                predictFromWorkflow(imageData);
            }, false);

            if (file) {
                reader.readAsDataURL(file);
                preview.style.display = "inherit";
            }
        }

        // Analyzes image provided with Clarifai's Workflow API
        function predictFromWorkflow(photoUrl) {
            app.workflow.predict(workflowId, { base64: photoUrl }).then(
                function (response) {
                    var outputs = response.results[0].outputs;
                    var analysis = $(".analysis");

                    analysis.empty();
                    console.log(outputs);

                    outputs.forEach(function (output) {
                        var modelName = getModelName(output);

                        // Create heading for each section
                        var newModelSection = document.createElement("div");
                        newModelSection.className = modelName + " modal-container";

                        var newModelHeader = document.createElement("h2");
                        newModelHeader.innerHTML = modelName;
                        newModelHeader.className = "model-header";

                        var formattedString = getFormattedString(output);
                        var newModelText = document.createElement("p");
                        newModelText.innerHTML = formattedString;
                        newModelText.className = "model-text";

                        newModelSection.append(newModelHeader);
                        newModelSection.append(newModelText);
                        analysis.append(newModelSection);
                    });
                },
                function (err) {
                    console.log(err);
                }
            );
        }

        // Helper function to get model name
        function getModelName(output) {
            if (output.model.display_name !== undefined) {
                return output.model.display_name;
            } else if (output.model.name !== undefined) {
                return output.model.name;
            } else {
                return "";
            }
        }

        // Helper function to get output customized for each model
        function getFormattedString(output) {
            var formattedString = "";
            var data = output.data;
            console.log(data);
            var maxItems = 3;
            // NSFW
            if (output.model.model_version.id === "aa47919c9a8d4d94bfa283121281bcc4") {
                var items = data.concepts;

                formattedString = "This photo is:";
                var name;
                for (var i = 0; i < items.length; i++) {
                    var nsfw = (Math.round(items[1].value * 10000) / 100);
                    var sfw = (Math.round(items[0].value * 10000) / 100);
                    name = items[0].name;
                    formattedString += "<br/>- " + items[i].name + " at a " + (Math.round(items[i].value * 10000) / 100) + "% probability";

                }

                if (name == "sfw") {
                    //call upload method
                    formattedString += "<br/><br/><button onclick=\"uploadFile()\">Upload to S3</button>"
                }
            }
            return formattedString;
        }
    </script>

    <script>
        AWS.config.update({
            accessKeyId: 'ASIAVF7QI2DUMONYNRXO',
            secretAccessKey: 'TH2ww5RmsxPIO3RFMqYki51BlTPJ1PiTMXdNnmQW',
            sessionToken: 'FwoGZXIvYXdzEH4aDB8jAWObwphLqjUnFSLWAXjaNIF04fpEZrMESbd38GX/sJEwC9KfHaR7plnArilF5EAsPOEvBURY32vDVD+RAVT56L2o/agKDGRT/ZQdN6nYS0diWUtW8OUcOjkBDwSi+MnTaR1u6Rhp/OCBK0Eo7KQk0hDSZfZ4OxHrqBMf5TnCoxO/f7DBbYd0XlHJws22Dk2CAZ7gYtJ29UMJE0ZH18slYgxtuybMY9cv5aqUnvDx07RIVsg8swt3VYsGaA/PlAZUj7l3hH70Sk2FxJ0Oazaxku2NHYmANnzqQngO780oPhXnficovcLU+AUyLdKrtoWtCIF70uc2aZa+/5zK9gqPDeTbbhmUYnVsL1osmwjBSaLeGfZIe4ENzg=='
        });
        AWS.config.region = 'us-east-1';

        function uploadFile() {
            var s3 = new AWS.S3({
                params: {
                    Bucket: 'csctalents2'
                    //Bucket: 'testingforcsc'
                }
            });
            var file = document.getElementById('file').files[0];
            if (file) {
                s3.putObject({
                    Key: file.name,
                    ContentType: file.type,
                    Body: file,
                    ACL: "public-read"
                },
                    function (err, data) {
                        if (data !== null) {
                            alert("Upload Successful!");
                        }
                        else {
                            alert("Upload Failed!");
                        }
                    });
            }
        }
    </script>

    <script>
      

        //var shortURL = ShortLinkBitly("https://sp-p1851830-s3-bucket-csc.s3.amazonaws.com/Barot_Bellingham_tn.jpg");
        /*********************************************
        * Short Link using Bitly
        *********************************************/
        function ShortLinkBitly(pLongUrl) { /*pLongUrl is the long URL*/

            /*Long URL must start with a protocol, bitly can't (and won't) figure out the right protocol.*/
            if (!pLongUrl.match(/(ftp|http|https):\/\//i)) {
                return "Error: Link must start with a protocol (e.g.: http or https).";
            }

            var apiKey = 'edde47d00d69ad41f02bf97ac23cbe7b7d9a23a5';
            var username = 'edee17';
            //var test = {
            //    long_url: pLongUrl
            //    };



            /*Ajax call*/
            $.ajax({
                url: 'https://api-ssl.bitly.com/v3/shorten?login=' + username + '&access_token=' + apiKey + '&format=json&longUrl=' + encodeURIComponent(pLongUrl),
                //  url: 'https://api-ssl.bitly.com/v4/shorten=',
                //dataType: 'jsonp',
                type: 'POST',
                //headers: {
                //    "Authorization":
                //        "Bearer d9bb5dd43b6db46a07f4ab1a293421fbea784482",
                //},
                //data: JSON.stringify(test),

                success: function (response) {

                    console.log(response);
                    console.log(response.data.url);
                    if (response.status_code == 500) {

                        /*500 status code means the link is malformed.*/
                        return "Error: Invalid link.";

                    } else if (response.status_code != 200) {

                        /*If response is not 200 then an error ocurred. It can be a network issue or bitly is down.*/
                        return "Error: Service unavailable.";

                        /*Uncomment the following line only for debugging purposes*/
                        /*console.log('Response: ' + response.status_code + '-' + response.status_txt);*/
                    }
                    else
                        return response.data.url; /* OK, return the short link */
                },
                error: function (response) {
                    console.log(response);
                },

                contentType: 'application/json'
            });

        }
        /* END: Short Link using Bitly */



        var talentId;

        $('#addModal').on('shown.bs.modal', function (e) {
            if (sessionStorage.getItem('tokenKey') == null || sessionStorage.getItem('username') == null) {
                alertDone('Login to access this feature');

                $.ajax({
                    type: 'POST',
                    async: true,
                    url: '/api/Talent/Add',
                    data: webFormData,
                    datatype: 'application/json',
                    contentType: 'application/x-www-form-urlencoded',

                }).done(function (data) {
                    console.dir(data);
                })

            }
            else {
            }
        });

        //to add
        $('#btnAdd').click(function () {

            alert("Data is being added to Database");

            if ($("#addName").val().trim().length == 0 || $("#addShortName").val().trim().length == 0 || $("#addReknown").val().trim().length == 0 || $("#addImage").val().trim().length == 0 || $("#addBio").val().trim().length == 0) {
                alert('Please Fill In The Information!');
            }

            else {
                //var talent = {
                //    Name: $('#addName').val(),
                //    ShortName: $('#addShortName').val(),
                //    Reknown: $('#addReknown').val(),
                //    Bio: $('#addBio').val(),
                //    ImageLink: $('#addImage').val(),
                //    CreatedBy: sessionStorage.getItem('username'),
                //    UpdatedBy: sessionStorage.getItem('username')
                //};

                function WebFormData(inName, inShortName, inReknown, inImageURL, inBio) {
                    this.name = inName;
                    this.shortName = inShortName;
                    this.reknown = inReknown;
                    this.imageURL = inImageURL;
                    this.bio = inBio

                } //end of webformdata

                let collectedName = $('#addName').val();
                let collectedShortName = $('#addShortName').val();
                let collectedReknown = $('#addReknown').val();
                let collectedImageURL = $('#addImage').val();
                let collectedBio = $('#addBio').val();

                let webFormData = new WebFormData(collectedName, collectedShortName, collectedReknown, collectedImageURL, collectedBio);
                console.dir(webFormData);

                $.ajax({
                    type: 'POST',
                    async: true,
                    url: '/api/talents/Add',
                    data: webFormData,
                    datatype: 'application/json',
                    contentType: 'application/x-www-form-urlencoded',

                }).done(function (data) {
                    console.dir(data);


                    new Noty({
                        text: data.message,
                        theme: 'metroui',
                        layout: 'center',
                        type: 'success'
                    }).show();
                    setTimeout(function () {
                        location.reload();
                        //location.href = "https://localhost:44385/Events/Events";
                    }, 2000);


                    // location.reload("href);
                }).fail(function (data) {
                    console.dir(data);
                    new Noty({
                        text: data.responseJSON.message,
                        theme: 'metroui',
                        layout: 'center',
                        type: 'error'
                    }).show();

                })


                //$.ajax({
                //    url: '/api/talents/Add',
                //    headers: { 'Authorization': 'Bearer ' + sessionStorage.getItem('tokenKey') },
                //    cache: false,
                //    async: true,
                //    type: 'POST',
                //    data: webFormData,
                //    datatype: 'application/json',
                //    contentType: 'application/json; charset=utf-8',
                //  //  data: JSON.stringify(talent),


                //    statusCode: {
                //        201: function () {
                //            hideModal();
                //        }
                //    }
                //}).success(function (data) {
                //    console.dir(data);
                //    hideModal();
                //    window.location.reload();




            }
        });


        $(function () {
            $('#update').on('click', '#editModal', function () {
                id = $(this).val();
                loadEdit($(this).val());
            });
        })
        function loadEdit(inId) {
            $.ajax({
                method: 'GET',
                url: `/API/talents/${inId}`,
                dataType: 'json',
            }).done(function (data) {
                console.log(data);
                $('#editName').val(data.name);
                $('#editShortName').val(data.shortName);
                $('#editReknown').val(data.reknown);
                $('#editImage').val(data.imageURL);
                $('#editBio').val(data.bio);


            })
        }



        $(function () {
            $('#update').on('click', '#btnDelete', function () {
                id = $(this).val();

            });
        })







        function WebFormData(inName, inShortName, inReknown, inImageURL, inBio) {
            this.name = inName;
            this.shortName = inShortName;
            this.reknown = inReknown;
            this.imageURL = inImageURL;
            this.bio = inBio

        } //end of webformdata




        //to update
        $('#btnSave').click(function () {
            alert("updating...");

            if ($("#editName").val().trim().length == 0 || $("#editShortName").val().trim().length == 0 || $("#editReknown").val().trim().length == 0 || $("#editImage").val().trim().length == 0 || $("#editBio").val().trim().length == 0) {
                alert('Please Fill In The Information!');
            }

            else {



                //   loadEdit($(this).val());


                //var talent = {
                //    Name: $('#editName').val(),
                //    ShortName: $('#editShortName').val(),
                //    Reknown: $('#editReknown').val(),
                //    Bio: $('#editBio').val(),
                //    ImageLink: $('#editImage').val(),
                //    UpdatedBy: sessionStorage.getItem("username")
                //};


                let collectedName = $('#editName').val();
                let collectedShortName = $('#editShortName').val();
                let collectedReknown = $('#editReknown').val();
                let collectedImageURL = $('#editImage').val();
                let collectedBio = $('#editBio').val();
                console.dir(collectedName, collectedShortName, collectedReknown, collectedImageURL, collectedBio);
                let webFormData = new WebFormData(collectedName, collectedShortName, collectedReknown, collectedImageURL, collectedBio);
                console.dir(webFormData);



                $.ajax({
                    method: 'PUT',
                    async: true,
                    url: `/api/talents/${id}`,
                    data: webFormData,
                    datatype: 'application/json',
                    contentType: 'application/x-www-form-urlencoded',

                }).done(function (data, textStatus, jqXHR) {
                    new Noty({
                        text: data.message,
                        theme: 'metroui',
                        layout: 'center',
                        type: 'success'
                    }).show();
                    setTimeout(function () {
                        location.reload();
                    }, 2000);
                }).fail(function (data, textStatus, jqXHR) {
                    new Noty({
                        text: data.responseJSON.message,
                        theme: 'metroui',
                        layout: 'center',
                        timeout: 3000,
                        type: 'error'
                    }).show();
                })
                //$.ajax({
                //    url: `/api/talents/${id}` ,
                //    headers: { 'Authorization': 'Bearer ' + sessionStorage.getItem('tokenKey') },
                //    cache: false,
                //    type: 'PUT',
                //    contentType: 'application/json; charset=utf-8',
                //    data : webFormData,
                //  //  data: JSON.stringify(talent),
                //    success: function () {
                //        hideModal();
                //    }
                //}).done(function (response) {
                //    alert(response);
                //});

            }
        });

        //to get Id for deleting
        $('#deleteModal').on('shown.bs.modal', function (e) {
            if (sessionStorage.getItem('tokenKey') == null || sessionStorage.getItem('username') == null) {
                alertDone('Login to access this feature');
            }
            else {
                talentId = $(e.relatedTarget).data('talentid');

            }
        });
        $('#deleteModal').click(function () {
            //    talentId = $(this.id.relatedTarget).data('talentid');
        })
        //to delete
        $('#btnDelete').click(function () {
            $.ajax({
                method: 'DELETE',
                url: `/API/talents/${id}`
            }).done(function (data, textStatus, jqXHR) {
                new Noty({
                    text: data.message,
                    theme: 'metroui',
                    layout: 'center',
                    type: 'success'
                }).show();
                setTimeout(function () {
                    location.reload();
                }, 2000);
            }).fail(function (data, textStatus, jqXHR) {
                new Noty({
                    text: data.responseJSON.message,
                    theme: 'metroui',
                    layout: 'center',
                    timeout: 3000,
                    type: 'error'
                }).show();
            })
            //$.ajax({
            //    url: '/api/talents/' + talentId,
            //    headers: { 'Authorization': 'Bearer ' + sessionStorage.getItem('tokenKey') },
            //    cache: false,
            //    type: 'Delete',
            //    contentType: 'application/json; charset=utf-8',
            //    success: function () {
            //        hideModal();
            //    }
            //}).done(function (data) {
            //    alert(data);
            // });
        });

        //to get info about 1 and display in form
        function getTalent(talentId) {
            $.ajax({
                url: '/api/talents/' + talentId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $('#editName').val(data.Name);
                    $('#editShortName').val(data.ShortName);
                    $('#editReknown').val(data.Reknown);
                    $('#editBio').val(data.Bio);
                    $('#editImage').val(data.imageURL);
                }
            });
        }

    </script>
}
