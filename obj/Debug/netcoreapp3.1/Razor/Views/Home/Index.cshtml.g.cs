#pragma checksum "C:\Users\User\source\repos\CSC_Assignment_2\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0fa7eca3bd4e4cd47af259098ec76031fd85d3a2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\User\source\repos\CSC_Assignment_2\Views\_ViewImports.cshtml"
using TheLifeTimeTalents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\User\source\repos\CSC_Assignment_2\Views\_ViewImports.cshtml"
using TheLifeTimeTalents.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\User\source\repos\CSC_Assignment_2\Views\Home\Index.cshtml"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\User\source\repos\CSC_Assignment_2\Views\Home\Index.cshtml"
using TheLifeTimeTalents.Services;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0fa7eca3bd4e4cd47af259098ec76031fd85d3a2", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"749dea2950bf919e74914922d2fb05f3ce34aef0", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\User\source\repos\CSC_Assignment_2\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\User\source\repos\CSC_Assignment_2\Views\Home\Index.cshtml"
  var identity = Context.User.Identity as ClaimsIdentity;

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"container\" id=\"addarea\">\r\n    <div class=\"row col-md-10 col-md-offset-1\">\r\n");
            WriteLiteral(@"    </div>
</div>

<!-- adding new new talent -->
<div id=""addModal"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">

        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Add</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">

                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0fa7eca3bd4e4cd47af259098ec76031fd85d3a25256", async() => {
                WriteLiteral(@"
                    <!-- Text input-->
                    <div class=""form-group"">
                        <label class=""col-md-4 control-label"" for=""addName"">Name</label>
                        <div class=""col-md-4"">
                            <input style=""width: 350%"" maxlength=""1000"" id=""addName"" name=""addName"" type=""text"" placeholder=""Barot Bellingham"" class=""form-control input-md""");
                BeginWriteAttribute("required", " required=\"", 1316, "\"", 1327, 0);
                EndWriteAttribute();
                WriteLiteral(@">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class=""form-group"">
                        <label class=""col-md-4 control-label"" for=""addShortName"">Short Name</label>
                        <div class=""col-md-4"">
                            <input style=""width: 350%"" maxlength=""1000"" id=""addShortName"" name=""addShortName"" type=""text"" placeholder=""Barot_Bellingham"" class=""form-control input-md""");
                BeginWriteAttribute("required", " required=\"", 1812, "\"", 1823, 0);
                EndWriteAttribute();
                WriteLiteral(@">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class=""form-group"">
                        <label class=""col-md-4 control-label"" for=""addReknown"">Reknown</label>
                        <div class=""col-md-4"">
                            <input style=""width: 350%"" maxlength=""1000"" id=""addReknown"" name=""addReknown"" type=""text"" placeholder=""Best F1 Driver"" class=""form-control input-md""");
                BeginWriteAttribute("required", " required=\"", 2297, "\"", 2308, 0);
                EndWriteAttribute();
                WriteLiteral(@">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class=""form-group"">
                        <label class=""col-md-4 control-label"" for=""addImage"">Link to Image</label>
                        <div class=""col-md-4"">
                            <input style=""width: 350%"" maxlength=""1000"" id=""addImage"" name=""addImage"" type=""text"" placeholder=""https://csctalents2.s3.amazonaws.com/Barot_Bellingham_tn.jpg"" class=""form-control input-md""");
                BeginWriteAttribute("required", " required=\"", 2828, "\"", 2839, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n");
                WriteLiteral(@"                        </div>
                    </div>

                    <!-- Textarea -->
                    <div class=""form-group"">
                        <label class=""col-md-4 control-label"" for=""addBio"">Bio</label>
                        <div class=""col-md-4"">
                            <textarea style=""width: 350%"" maxlength=""10000"" rows=""12"" placeholder=""Description"" class=""form-control"" id=""addBio"" name=""addBio""></textarea>
                        </div>
                    </div>

                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"">Close</button>
                <button id=""btnAdd"" name=""btnAdd"" type=""button"" class=""btn btn-success"">Add</button>
            </div>
        </div>

    </div>
</div>

<!-- editing talents-->
<div id=""editModal"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">

        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Update</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">

                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0fa7eca3bd4e4cd47af259098ec76031fd85d3a210623", async() => {
                WriteLiteral(@"

                    <!-- Text input-->
                    <div class=""form-group"">
                        <label class=""col-md-4 control-label"" for=""editName"">Name</label>
                        <div class=""col-md-4"">
                            <input style=""width: 350%"" maxlength=""1000"" id=""editName"" name=""editName"" type=""text""");
                BeginWriteAttribute("placeholder", " placeholder=\"", 4682, "\"", 4696, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"form-control input-md\"");
                BeginWriteAttribute("required", " required=\"", 4727, "\"", 4738, 0);
                EndWriteAttribute();
                WriteLiteral(@">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class=""form-group"">
                        <label class=""col-md-4 control-label"" for=""editShortName"">Short Name</label>
                        <div class=""col-md-4"">
                            <input style=""width: 350%"" maxlength=""1000"" id=""editShortName"" name=""editShortName"" type=""text""");
                BeginWriteAttribute("placeholder", " placeholder=\"", 5165, "\"", 5179, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"form-control input-md\"");
                BeginWriteAttribute("required", " required=\"", 5210, "\"", 5221, 0);
                EndWriteAttribute();
                WriteLiteral(@">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class=""form-group"">
                        <label class=""col-md-4 control-label"" for=""editReknown"">Reknown</label>
                        <div class=""col-md-4"">
                            <input style=""width: 350%"" maxlength=""1000"" id=""editReknown"" name=""editReknown"" type=""text""");
                BeginWriteAttribute("placeholder", " placeholder=\"", 5639, "\"", 5653, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"form-control input-md\"");
                BeginWriteAttribute("required", " required=\"", 5684, "\"", 5695, 0);
                EndWriteAttribute();
                WriteLiteral(@">

                        </div>
                    </div>

                    <!-- Text input-->
                    <div class=""form-group"">
                        <label class=""col-md-4 control-label"" for=""editImage"">Link to Image</label>
                        <div class=""col-md-4"">
                            <input style=""width: 350%"" maxlength=""1000"" id=""editImage"" name=""editImage"" type=""text"" placeholder=""https://csctalents2.s3.amazonaws.com/Barot_Bellingham_tn.jpg"" class=""form-control input-md""");
                BeginWriteAttribute("required", " required=\"", 6218, "\"", 6229, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n");
                WriteLiteral(@"                        </div>
                    </div>

                    <!-- Textarea -->
                    <div class=""form-group"">
                        <label class=""col-md-4 control-label"" for=""editBio"">Bio</label>
                        <div class=""col-md-4"">
                            <textarea style=""width: 350%"" maxlength=""10000"" rows=""12"" placeholder=""Description"" class=""form-control"" id=""editBio"" name=""editBio""></textarea>
                        </div>
                    </div>

                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"">Close</button>
                <button id=""btnSave"" name=""btnSave"" type=""button"" class=""btn btn-success"">Save</button>
            </div>
        </div>

    </div>
</div>

<!--deleting talents-->
<div id=""deleteModal"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">

        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Delete</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body text-center"">
                <h2>Are you sure you want to delete this?</h2>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Cancel</button>
                <button id=""btnDelete"" name=""btnDelete"" type=""bu");
            WriteLiteral(@"tton"" class=""btn btn-danger"">Delete</button>
            </div>
        </div>

    </div>
</div>

<!--disqus talents-->
<div id=""disqusModal"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">

        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Comment</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body text-center"">
                <div id=""disqus_thread""></div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Cancel</button>
            </div>
        </div>

    </div>
</div>

");
            WriteLiteral(@"
<div id=""searcharea"">
    <label for=""search"">live search</label>
    <p>Enter the name or info about a speaker</p>
    <input type=""search"" name=""search"" id=""search"" placeholder=""name or info"" />
    <button type=""button"" class=""btn btn-success"" data-toggle=""modal"" data-target=""#addModal""><span class=""glyphicon glyphicon-plus""></span> Add</button>
");
            WriteLiteral("    <div class=\"upload-photo\">\r\n        <input type=\"file\" name=\"file\" id=\"file\" value=\"dataFile\" onchange=\"uploadImage()\">\r\n        <div class=\"photo-container\">\r\n            <img class=\"photo\"");
            BeginWriteAttribute("src", " src=\"", 9512, "\"", 9518, 0);
            EndWriteAttribute();
            WriteLiteral(" alt=\"Image preview\">\r\n        </div>\r\n    </div>\r\n    <div class=\"analysis\" id=\"analysis\">\r\n    </div>\r\n</div>\r\n<div id=\"update\"></div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <style>

        body {
            background: #DAD7C7;
        }

        #searcharea {
            margin: 0 auto;
            text-align: center;
            background: #BF996B;
            padding: 10px;
            width: 30%;
            -webkit-border-radius: 10px 10px 0 0;
            -moz-border-radius: 10px 10px 0 0;
            border-radius: 10px 10px 0 0;
        }

            #searcharea label {
                font: bold 1.3em Arial;
                text-transform: uppercase;
                padding-bottom: 5px;
                color: #A61C1C;
            }

            #searcharea p {
                margin: 0;
                line-height: 1em;
                padding-bottom: 5px;
            }

            #searcharea input {
                width: 80%;
                text-align: center;
            }

        #update {
            font-family: Georgia, ""Times New Roman"", Times, serif;
            width: 70%;
            margin: 0 auto;
       ");
                WriteLiteral(@"     border-top: 1px dotted #CCC;
        }

            #update ul {
                list-style: none;
                margin: 0;
                padding: 0;
            }

                #update ul li {
                    width: 100%;
                    padding: 0 20px;
                    background: #EEE;
                    padding-bottom: 10px;
                    height: 110px;
                    overflow: hidden;
                    border-bottom: 1px dotted #CCC;
                    -webkit-animation: myanim 1s;
                    -moz-animation: myanim 1s;
                    -o-animation: myanim 1s;
                    animation: myanim 1s;
                    -webkit-transition: height 0.3s ease-out;
                    -moz-transition: height 0.3s ease-out;
                    -o-transition: height 0.3s ease-out;
                    transition: height 0.3s ease-out;
                }

            #update li:hover {
                background: #FFFCE5;
           ");
                WriteLiteral(@"     min-height: 110px;
                height: 250px;
                overflow: visible;
            }

            #update h2 {
                margin: 0;
                padding: 0;
                font-size: 1.2em;
                padding-bottom: 5px;
                padding-top: 20px;
                font-family: Arial, Helvetica, sans-serif;
                color: #BF5841;
                border-bottom: 1px dotted #CCC;
                margin-bottom: 10px;
            }

            #update img {
                float: left;
                width: 80px;
                margin-right: 10px;
                -webkit-border-radius: 10px;
                -moz-border-radius: 10px;
                border-radius: 10px;
            }

        ");
                WriteLiteral("@-webkit-keyframes myanim {\r\n            0% {\r\n                opacity: 0.3;\r\n            }\r\n\r\n            100% {\r\n                opacity: 1.0;\r\n            }\r\n        }\r\n\r\n        ");
                WriteLiteral("@-moz-keyframes myanim {\r\n            0% {\r\n                opacity: 0.3;\r\n            }\r\n\r\n            100% {\r\n                opacity: 1.0;\r\n            }\r\n        }\r\n\r\n        ");
                WriteLiteral("@-o-keyframes myanim {\r\n            0% {\r\n                opacity: 0.3;\r\n            }\r\n\r\n            100% {\r\n                opacity: 1.0;\r\n            }\r\n        }\r\n\r\n        ");
                WriteLiteral(@"@keyframes myanim {
            0% {
                opacity: 0.3;
            }

            100% {
                opacity: 1.0;
            }
        }

        #btnDelete {
            margin-left: 5px;
        }
        #btnComment {
            margin-left: 5px;
        }
        .photo {
            margin: auto;
            margin-top: 5px;
        }
    </style>

    <script type=""text/javascript"" src=""https://sdk.clarifai.com/js/clarifai-latest.js""></script>
    <script type=""text/javascript"" src=""https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js""></script>
    <script>
        var clarifaiApiKey = '7949d65990db40779e313b1ad2ffec48';
        var workflowId = 'NSFW';

        var app = new Clarifai.App({
            apiKey: clarifaiApiKey
        });

        // Handles image upload
        function uploadImage() {
            var preview = document.querySelector('img');
            var file = document.querySelector('input[type=file]').files[0];
    ");
                WriteLiteral(@"        var reader = new FileReader();

            reader.addEventListener(""load"", function () {
                preview.src = reader.result;
                var imageData = reader.result;
                imageData = imageData.replace(/^data:image\/(.*);base64,/, '');
                predictFromWorkflow(imageData);
            }, false);

            if (file) {
                reader.readAsDataURL(file);
                preview.style.display = ""inherit"";
            }
        }

        // Analyzes image provided with Clarifai's Workflow API
        function predictFromWorkflow(photoUrl) {
            app.workflow.predict(workflowId, { base64: photoUrl }).then(
                function (response) {
                    var outputs = response.results[0].outputs;
                    var analysis = $("".analysis"");

                    analysis.empty();
                    console.log(outputs);

                    outputs.forEach(function (output) {
                        var modelNam");
                WriteLiteral(@"e = getModelName(output);

                        // Create heading for each section
                        var newModelSection = document.createElement(""div"");
                        newModelSection.className = modelName + "" modal-container"";

                        var newModelHeader = document.createElement(""h2"");
                        newModelHeader.innerHTML = modelName;
                        newModelHeader.className = ""model-header"";

                        var formattedString = getFormattedString(output);
                        var newModelText = document.createElement(""p"");
                        newModelText.innerHTML = formattedString;
                        newModelText.className = ""model-text"";

                        newModelSection.append(newModelHeader);
                        newModelSection.append(newModelText);
                        analysis.append(newModelSection);
                    });
                },
                function (err) {
              ");
                WriteLiteral(@"      console.log(err);
                }
            );
        }

        // Helper function to get model name
        function getModelName(output) {
            if (output.model.display_name !== undefined) {
                return output.model.display_name;
            } else if (output.model.name !== undefined) {
                return output.model.name;
            } else {
                return """";
            }
        }

        // Helper function to get output customized for each model
        function getFormattedString(output) {
            var formattedString = """";
            var data = output.data;
            console.log(data);
            var maxItems = 3;
            // NSFW
            if (output.model.model_version.id === ""aa47919c9a8d4d94bfa283121281bcc4"") {
                var items = data.concepts;

                formattedString = ""This photo is:"";
                var name;
                for (var i = 0; i < items.length; i++) {
                    var n");
                WriteLiteral(@"sfw = (Math.round(items[1].value * 10000) / 100);
                    var sfw = (Math.round(items[0].value * 10000) / 100);
                    name = items[0].name;
                    formattedString += ""<br/>- "" + items[i].name + "" at a "" + (Math.round(items[i].value * 10000) / 100) + ""% probability"";

                }

                if (name == ""sfw"") {
                    //call upload method
                    formattedString += ""<br/><br/><button onclick=\""uploadFile()\"">Upload to S3</button>""
                }
            }
            return formattedString;
        }
    </script>

    <script>
        AWS.config.update({
            accessKeyId: 'ASIAVF7QI2DUPMRFR5PI',
            secretAccessKey: '8nEf6j2Nl02tPX/EN8eVsZlP/9+AitVau8V/SDFZ',
            sessionToken: 'FwoGZXIvYXdzEND//////////wEaDAc2ZWU/d18FdyqoziLWAR6txFIsfT8thvMHHft2Ka8Spv+JRqYQl6L6R/IVgmsljpJXzc7FKZHVF/qPlXikeLEvV8QK4wRMGodJAbDJp2PaVzopk2qbBjflECJ9RU23ATELZUYzg0/s8yx8efE3oQgK9x5xszsc8IK0WnvV+auV+2fsHrX2IFy");
                WriteLiteral(@"c1wiAFixUSHmxCDKAn7mkvHULAHbM2K0d6VD+vwzCG3t2B//sn9op/GN5gIWfK6ApXVgTohnRMplSiiv4V4Xzcdukd+HzilHbkEgM+FD1zudf6m/g7DEisuLoRIco7dWe+QUyLXyjYxCYACkxY0q55LVrOpcEIf+4AUlXkuA7eMoBqFO+/wA6FMTfRgOdhjcMbw=='
        });
        AWS.config.region = 'us-east-1';

        function uploadFile() {
            var s3 = new AWS.S3({
                params: {
                    Bucket: 'csctalents2'
                    //Bucket: 'testingforcsc'
                }
            });
            var file = document.getElementById('file').files[0];
            if (file) {
                s3.putObject({
                    Key: file.name,
                    ContentType: file.type,
                    Body: file,
                    ACL: ""public-read""
                },
                    function (err, data) {
                        if (data !== null) {
                            alert(""Upload Successful!"");
                        }
                        else {
                            alert(""Upload");
                WriteLiteral(@" Failed!"");
                        }
                    });
            }
        }
    </script>

    <script>
        $('#search').keyup(function () {
            //get data from json file
            //var urlForJson = ""data.json"";

            //get data from Restful web Service in development environment
            var urlForJson = ""/api/talents"";

            //get data from Restful web Service in production environment
            //var urlForJson= ""http://csc123.azurewebsites.net/api/talents"";
            //var bio;
            //var name;
            //var output = '<ul class=""searchresults"">';
            //Url for the Cloud image hosting
            //var urlForCloudImage = ""http://res.cloudinary.com/doh5kivfn/image/upload/v1460006156/talents/"";
            //var urlForCloudImage = ""https://sp-p1851830-s3-bucket-csc.s3.amazonaws.com/""
            //var urlForCloudImage = ""https://csc-talentsearch.s3.amazonaws.com/""
            var urlForCloudImage = ""https://csctalents2.s");
                WriteLiteral(@"3.amazonaws.com/""
            //var urlForCloudImage = ""https://testingforcsc.s3.amazonaws.com/""

            var searchField = $('#search').val();
            var myExp = new RegExp(searchField, ""i"");
            $.getJSON(urlForJson, function (data) {
                var output = '<ul class=""searchresults"">';
                $.each(data, function (key, val) {
                    //for debug
                    console.log(data);
                    if ((val.name.search(myExp) != -1) ||
                        (val.bio.search(myExp) != -1)) {
                        output += '<li>';
                        output += '<h2>' + val.name + '</h2>';
                        //output += '<img src=""images/' + val.ShortName + '_tn.jpg"" alt=""' + val.Name + '"" />';
                        //output += '<img src=' + urlForCloudImage + val.ShortName + ""_tn.jpg alt="" + val.Name + '"" />';
                        //output += '<p>' + val.Bio + '</p>';
");
#nullable restore
#line 537 "C:\Users\User\source\repos\CSC_Assignment_2\Views\Home\Index.cshtml"
                           
                            string roleName = "";
                            if (identity.IsAuthenticated)
                            {
                                roleName = identity.FindFirst("RoleName").ToString().Contains("Registered Paid Plan User").ToString();
                            }
                        

#line default
#line hidden
#nullable disable
                WriteLiteral("                        if (\"");
#nullable restore
#line 544 "C:\Users\User\source\repos\CSC_Assignment_2\Views\Home\Index.cshtml"
                        Write(roleName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""" == ""True"" ) {
                            //output += '<button class=""btn btn-warning pull-right"" data-toggle=""modal"" data-target=""#editModal"" data-talentid=""' + val.id + '""><i class=""fas fa-edit""></i></button>';
                            //output += '<button id=""btnDelete"" class=""btn btn-danger pull-right"" data-toggle=""modal"" data-target=""#deleteModal"" data-talentid=""' + val.id + '""><i class=""fas fa-trash""></i></button>';
                            output += '<button class=""btn btn-warning pull-right"" id=""editModal"" name=""editModal' + val.id + '"" data-toggle=""modal"" data-target=""#editModal"" value=""' + val.id + '""><i class=""fas fa-edit""></i></button>';
                            output += '<button id=""btnDelete"" name=""btnDelete' + val.id + '"" class=""btn btn-danger pull-right"" data-toggle=""modal"" data-target=""#deleteModal"" value=""' + val.id + '""><i class=""fas fa-trash""></i></button>';
                            output +=   `<button id=""btnComment"" class=""btn btn-success pull-right"" data-toggle=""mod");
                WriteLiteral(@"al"" data-target=""#disqusModal"" value=${val.id}><i class=""fas fa-comments ""></i></button>`
                        }

                        //get the image from cloud hosting

                        output += `<img src=""${val.image}"" alt""${val.name}"" />`
                        //'<img src=' + val.image + '""alt=""' + val.name + ' "" />';
                        //  <img src=""${val.image}"" alt""${val.name}"" />
                        output += '<p>' + val.bio + '</p>';
                        output += '</li>';

                        /*Long URL must start with a protocol, bitly can't (and won't) figure out the right protocol.*/
                        ShortLinkBitly(val.image);
                    }
                });
                output += '</ul>';
                $('#update').html(output);
            }); //get JSON
        });

        //var shortURL = ShortLinkBitly(""https://sp-p1851830-s3-bucket-csc.s3.amazonaws.com/Barot_Bellingham_tn.jpg"");
        /****************************");
                WriteLiteral(@"*****************
        * Short Link using Bitly
        *********************************************/
        function ShortLinkBitly(pLongUrl) { /*pLongUrl is the long URL*/

            /*Long URL must start with a protocol, bitly can't (and won't) figure out the right protocol.*/
            if (!pLongUrl.match(/(ftp|http|https):\/\//i)) {
                return ""Error: Link must start with a protocol (e.g.: http or https)."";
            }

            var apiKey = 'edde47d00d69ad41f02bf97ac23cbe7b7d9a23a5';
            var username = 'edee17';
            //var test = {
            //    long_url: pLongUrl
            //    };



            /*Ajax call*/
            $.ajax({
                url: 'https://api-ssl.bitly.com/v3/shorten?login=' + username + '&access_token=' + apiKey + '&format=json&longUrl=' + encodeURIComponent(pLongUrl),
                //  url: 'https://api-ssl.bitly.com/v4/shorten=',
                //dataType: 'jsonp',
                type: 'POST',
          ");
                WriteLiteral(@"      //headers: {
                //    ""Authorization"":
                //        ""Bearer d9bb5dd43b6db46a07f4ab1a293421fbea784482"",
                //},
                //data: JSON.stringify(test),

                success: function (response) {

                    console.log(response);
                    console.log(response.data.url);
                    if (response.status_code == 500) {

                        /*500 status code means the link is malformed.*/
                        return ""Error: Invalid link."";

                    } else if (response.status_code != 200) {

                        /*If response is not 200 then an error ocurred. It can be a network issue or bitly is down.*/
                        return ""Error: Service unavailable."";

                        /*Uncomment the following line only for debugging purposes*/
                        /*console.log('Response: ' + response.status_code + '-' + response.status_txt);*/
                    }
             ");
                WriteLiteral(@"       else
                        return response.data.url; /* OK, return the short link */
                },
                error: function (response) {
                    console.log(response);
                },

                contentType: 'application/json'
            });

        }
        /* END: Short Link using Bitly */


        var talentId;

        $('#addModal').on('shown.bs.modal', function (e) {
            if (sessionStorage.getItem('tokenKey') == null || sessionStorage.getItem('username') == null) {
                alertDone('Login to access this feature');
                $.ajax({
                    type: 'POST',
                    async: true,
                    url: '/api/Talent/Add',
                    data: webFormData,
                    datatype: 'application/json',
                    contentType: 'application/x-www-form-urlencoded',

                }).done(function (data) {
                    console.dir(data);
                })

       ");
                WriteLiteral(@"     }
            else {
            }
        });

        //to add
        $('#btnAdd').click(function () {

            alert(""Data is being added to Database"");

            if ($(""#addName"").val().trim().length == 0 || $(""#addShortName"").val().trim().length == 0 || $(""#addReknown"").val().trim().length == 0 || $(""#addImage"").val().trim().length == 0 || $(""#addBio"").val().trim().length == 0) {
                alert('Please Fill In The Information!');
            }

            else {
                //var talent = {
                //    Name: $('#addName').val(),
                //    ShortName: $('#addShortName').val(),
                //    Reknown: $('#addReknown').val(),
                //    Bio: $('#addBio').val(),
                //    ImageLink: $('#addImage').val(),
                //    CreatedBy: sessionStorage.getItem('username'),
                //    UpdatedBy: sessionStorage.getItem('username')
                //};
                function WebFormData(inName, inShor");
                WriteLiteral(@"tName, inReknown, inImageURL, inBio) {
                    this.name = inName;
                    this.shortName = inShortName;
                    this.reknown = inReknown;
                    this.imageURL = inImageURL;
                    this.bio = inBio

                } //end of webformdata

                let collectedName = $('#addName').val();
                let collectedShortName = $('#addShortName').val();
                let collectedReknown = $('#addReknown').val();
                let collectedImageURL = $('#addImage').val();
                let collectedBio = $('#addBio').val();

                let webFormData = new WebFormData(collectedName, collectedShortName, collectedReknown, collectedImageURL, collectedBio);
                console.dir(webFormData);

                $.ajax({
                    type: 'POST',
                    async: true,
                    url: '/api/talents/Add',
                    data: webFormData,
                    datatype: 'applicat");
                WriteLiteral(@"ion/json',
                    contentType: 'application/x-www-form-urlencoded',

                }).done(function (data) {
                    console.dir(data);


                    new Noty({
                        text: data.message,
                        theme: 'metroui',
                        layout: 'center',
                        type: 'success'
                    }).show();
                    setTimeout(function () {
                        location.reload();
                        //location.href = ""https://localhost:44385/Events/Events"";
                    }, 2000);


                    // location.reload(""href);
                }).fail(function (data) {
                    console.dir(data);
                    new Noty({
                        text: data.responseJSON.message,
                        theme: 'metroui',
                        layout: 'center',
                        type: 'error'
                    }).show();

                })

     ");
                WriteLiteral(@"       }
        });

        //to get Id for updating
        $('#editModal').on('shown.bs.modal', function (e) {
            if (sessionStorage.getItem('tokenKey') == null || sessionStorage.getItem('username') == null) {
                alertDone('Login to access this feature');
            }
            else {
                talentId = $(e.relatedTarget).data('talentid');
                getTalent(talentId);
            }
        });

        $(function () {
            $('#update').on('click', '#editModal', function () {
                id = $(this).val();
                loadEdit($(this).val());
            });
        })
        function loadEdit(inId) {
            $.ajax({
                method: 'GET',
                url: `/API/talents/${inId}`,
                dataType: 'json',
            }).done(function (data) {
                console.log(data);
                $('#editName').val(data.name);
                $('#editShortName').val(data.shortName);
                $");
                WriteLiteral(@"('#editReknown').val(data.reknown);
                $('#editImage').val(data.imageURL);
                $('#editBio').val(data.bio);


            })
        }
        $(function () {
            $('#update').on('click', '#btnDelete', function () {
                id = $(this).val();

            });
        })
        function WebFormData(inName, inShortName, inReknown, inImageURL, inBio) {
            this.name = inName;
            this.shortName = inShortName;
            this.reknown = inReknown;
            this.imageURL = inImageURL;
            this.bio = inBio

        } //end of webformdata

        //to update
        $('#btnSave').click(function () {
            alert(""updating..."");

            if ($(""#editName"").val().trim().length == 0 || $(""#editShortName"").val().trim().length == 0 || $(""#editReknown"").val().trim().length == 0 || $(""#editImage"").val().trim().length == 0 || $(""#editBio"").val().trim().length == 0) {
                alert('Please Fill In The Informatio");
                WriteLiteral(@"n!');
            }

            else {

                let collectedName = $('#editName').val();
                let collectedShortName = $('#editShortName').val();
                let collectedReknown = $('#editReknown').val();
                let collectedImageURL = $('#editImage').val();
                let collectedBio = $('#editBio').val();
                console.dir(collectedName, collectedShortName, collectedReknown, collectedImageURL, collectedBio);
                let webFormData = new WebFormData(collectedName, collectedShortName, collectedReknown, collectedImageURL, collectedBio);
                console.dir(webFormData);


                $.ajax({
                    method: 'PUT',
                    async: true,
                    url: `/api/talents/${id}`,
                    data: webFormData,
                    datatype: 'application/json',
                    contentType: 'application/x-www-form-urlencoded',

                }).done(function (data, textStatus, jqX");
                WriteLiteral(@"HR) {
                    new Noty({
                        text: data.message,
                        theme: 'metroui',
                        layout: 'center',
                        type: 'success'
                    }).show();
                    setTimeout(function () {
                        location.reload();
                    }, 2000);
                }).fail(function (data, textStatus, jqXHR) {
                    new Noty({
                        text: data.responseJSON.message,
                        theme: 'metroui',
                        layout: 'center',
                        timeout: 3000,
                        type: 'error'
                    }).show();
                })
            }
        });

        //to get Id for deleting
        $('#deleteModal').on('shown.bs.modal', function (e) {
            if (sessionStorage.getItem('tokenKey') == null || sessionStorage.getItem('username') == null) {
                alertDone('Login to access this feature");
                WriteLiteral(@"');
            }
            else {
                talentId = $(e.relatedTarget).data('talentid');
            }
        });

        //to delete
        $('#btnDelete').click(function () {
            $.ajax({
                method: 'DELETE',
                url: `/API/talents/${id}`
            }).done(function (data, textStatus, jqXHR) {
                new Noty({
                    text: data.message,
                    theme: 'metroui',
                    layout: 'center',
                    type: 'success'
                }).show();
                setTimeout(function () {
                    location.reload();
                }, 2000);
            }).fail(function (data, textStatus, jqXHR) {
                new Noty({
                    text: data.responseJSON.message,
                    theme: 'metroui',
                    layout: 'center',
                    timeout: 3000,
                    type: 'error'
                }).show();
            })
        });");
                WriteLiteral(@"

        //to get info about 1 and display in form
        function getTalent(talentId) {
            $.ajax({
                url: '/api/talents/' + talentId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $('#editName').val(data.Name);
                    $('#editShortName').val(data.ShortName);
                    $('#editReknown').val(data.Reknown);
                    $('#editBio').val(data.Bio);
                    $('#editImage').val(data.ImageLink);
                }
            });
        }
        $('#btnComment').on('click', function () {
            loadDisqus(this.val());
        });
        function loadDisqus(id) {
            /**
        *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
        *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://");
                WriteLiteral(@"disqus.com/admin/universalcode/#configuration-variables*/

            var disqus_config = function () {
                this.page.url = ""http://ec2-3-90-89-54.compute-1.amazonaws.com/"";  // Replace PAGE_URL with your page's canonical URL variable
                this.page.identifier = id; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
            };

        (function () { // DON'T EDIT BELOW THIS LINE
            var d = document, s = d.createElement('script');
            s.src = 'https://lttalents.disqus.com/embed.js';
            s.setAttribute('data-timestamp', +new Date());
            (d.head || d.body).appendChild(s);
        })();
        }
        
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
